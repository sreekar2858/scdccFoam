/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
(0 0 0)  //p0
(0.1 0.00414 0) //p1
(0.1 0.00414 0.3) //p2
(0 0 0.3)  //p3
(0.1 -0.00414 0)  //p4
(0.1 -0.00414 0.3) //p5
(0.1 0.00414 0.35) //p6
(0 0 0.35) //p7
(0.1 -0.00414  0.35) //p8
(0.1 0.00414 0.4) //p9
(0 0 0.4) //p10
(0.1 -0.00414  0.4) //p11
);

blocks
(
hex (0 4 1 0 3 5 2 3) (50  1 125) simpleGrading (1 1 1)
hex (3 5 2 3 7 8 6 7) (50  1 30) simpleGrading (1 1 1)
hex (7 8 6 7 10 11 9 10) (50  1 30) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
     back
     {
           type wedge;
           faces
           (
               (0 1 2 3)
               (3 2 6 7)
               (7 6 9 10)
           );
      }
     front
     {
           type wedge;
           faces
           (
               (0 3 5 4)
               (3 7 8 5)
               (7 10 11 8)
           );
      }
     condWall
     {
           type wall;
           faces
           (
               (2 5 8 6)
           );
      }
      htopWall
      {
            type wall;
            faces
            (
                (6 8 11 9)
            );
       }
      convWall
      {
            type wall;
            faces
            (
                (1 4 5 2)
            );
       }

     outlet
     {
           type patch;
           faces
           (
               (0 4 1 0)
           );
      }
     inlet
     {
           type patch;
           faces
           (
               (10 11 9 10)
           );
      }
     axis
     {
           type empty;
           faces
           (
               (0 3 3 0)
               (3 7 7 3)
               (7 10 10 7)
           );
      }
);

mergePatchPairs
(
);

// ************************************************************************* //
